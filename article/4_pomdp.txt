# POMDP建模
现在让我们将焦点切换到部分可观的问题。在马尔科夫决策过程中只解决行动中的不确定性，但他们假设世界的状态可以有把握地确定。对于完全可观马尔可夫决策过程，我们设计了一个数值迭代算法用于控制随机域中的机器人。现在，我们将有兴趣在更一般的情况，其中的状态不是完全可观的。缺乏观测性是指机器人只能在可能的世界状态估计一个P后验分布，我们称之为belief。此设置也称为部分可观马尔可夫决策过程，或POMDPs。
在本章的其余部分要解决的核心问题是：对于POMDPs我们可以制定规划和控制算法。寻求最优策略的算法仅存在于有限的世界，其中状态空间，动作空间，观测空间，以及计划时域T均为有限的。不幸的是，这些精确的方法的计算是十分复杂的。对于更有趣的连续的情况下，最有名的算法都是近似的。
在MDPs中的中心更新方程如下
C^T(s) = max_a\int[c(s')+C^(T-1)(s')]P(s'|a,s)ds'
在POMDPs中，我们应用非常接近的想法，然而，状态并不是可观的。我们只可以得到states 的后验分布belief state b。因此对于POMDPs的计算方程如下
C^T(b) = max_a\int[c(b')+C^(T-1)(b')]P(b'|a,b)db'
并且我们使用这个方程来生成控制
pi^T(b) = argmax_a\int[c(b')+C^(T-1)(b')]P(b'|a,b)db'
不幸的是，在belief空间计算价值要比在state空间复杂的多。belief是一个概率分布，因此，在POMDPs中的价值C_T是有关概率分布的函数，这就是问题所在。如果状态空间是有限的，由于belief space是所有状态空间的分布，所以belief state就是连续的。对于连续状态空间的问题，这个情况更加复杂，在这种情况下，belief space是一个无线维的连续体。除此之外，公式。。和公式。。对于所有的beliefs b进行积分。由于belief space的复杂度，积分并不容易精确计算或者有效地近似，
幸运的是，对于有限的情况，存在确切的解法。

## 有限环境
下面考虑一种十分重要的特殊情况，有限环境。在这里，我们假设我们有一个有限状态空间，在每个状态具有有限的动作，有限数量的观测，和有限计划时域.在这些情况下，最优值函数可以被精确计算，也即具有最优策略。然而这并不是对所有情况都很明显，即使状态空间是有限的，事实上可以有无限多的可能的belief。然而，在这一点，下面我们建立一个众所周知的结果，最优值函数是凸的并且由有限多个线性部分组成。因此，即使该值函数被定义在一个连续体，它可以在计算机中以浮点数的精度来表示。
说明性的例子
一个有限的世界的一个例子示于图16.1。这个具体的例子极端简单，其唯一的作用是在讨论一般的解决方案前帮助熟悉POMDPs的关键问题。我们注意到，图16.1具有四种状态，标记S1至S4中，两个动作，a_1和a_2，和两个观察，标记O1和O2。初始状态是随机抽取来自两个顶端状态，s_1和s_2。现在机器人给出一个选择：执动作作A1，这将具有高概率(但不总是)瞬间移动到相应的其他状态。另一种可选择方案，它可以执动作作A2，这导致在这两个底状态，S3或S4的概率中的一个的转变所示。在S3中，机器人将收到一个大的正收益，而在S4的收益为负。这两个state是终端的状态，也就是说，一旦进入任务就结束了。因此，机器人的目标是在状态S1时要执动作作A2。如果机器人知道它是在什么状态，执行任务是非常简单：简单地套用动作A1，直到状态是S1，然后应用动作A2。然而，机器人不知道其状态。相反，它可以感知两个观测O1和O2。不幸的是，这两个观测可能在这两种状态，虽然观察一比其他的概率不同，这取决于什么状态的机器人是由于机器人并不知道它的初始状态是S1或S2，它必须仔细跟踪过去的观测来计算它的belief。因此，关键的策略问题是：什么时候应该机器人尝试动作A2？具有多大的置信度去执动作作a_2，需要多长时间来尝试这个动作？这些和其他问题将在下面进一步描述。
本节的目标是开发一种在有限状态和有限时域T的情况下来计算最优值函数的算法。让我们表示用T来表示计划时域和用S1,...,SN表示状态。利用状态空间的有限，

图16.1有限状态环境，用来说明价值迭代的belief空间。

我们注意到，belief B(S)由n个概率给出
p_i = b(s=s_i)(16.4)
其中i=1,...,n。
belief必须满足的条件
p_i≥0
\sum_(i=1)^np_i=1
(16.5)
因为最后一个条件的，b(s)可通过n-1个参数p_1,...,p_(n-1)而不是n个参数指定。剩余的概率的p_n可以根据如下公式计算：
p_n=1-\sum_(i=1)^(n-1)p_i
(16.6)。
因此，如果状态空间是有限的，并且大小为n的话，则belief是一个(n-1)维时域。
在我们的图16.1示出的例子中，可能出现的是由三个数值的概率值指定的belief，因为有四个状态。然而，操作a_2将状态{s_1，s_2}和状态{s_3，s_4}分开。因此，该机器人可能遇到的唯一的不确定性是状态s_1和s_2或者状态s_3和s_4之间的的混淆。两者均可以由一个单一的数值的概率值来表示，由此，belief状态的唯一连续成分是一维的。这使得这个例子方便绘制值的函数。
现在，让我们专注于一个问题，我们是否可以计算出最优值函数，准确地在有限的领域最优策略。如果没有，我们可能会被迫以接近它。起初，人们可能会得出这样的结论计算最优值函数是不可能的，由于这一事实，即belief空间是连续的。但是，我们观察到的有限的世界，值函数有一个特殊的形状：它是由有限多个线性件。这使得能够计算在有限时间内的最优值函数。我们还注意到，价值函数是凸和连续这后两种特性也适用于最优值函数在连续状态空间和无限的规划视野。
我们开始的belief状态b的直接回报我们的考虑。回想一下，b的收益是由下概率分布b的收益c中的给定期望：
c(b)=\int(c(s)b(s)ds) (16.7)
使用b唯一地由概率p_1,...,p_n指定的事实，我们可以写
c(b)= c(p_1,...,pn)=\sum_(i=1)^n(c(s_i)p_i)
(16.8)，它对于p_1,...,pn确实是线性。
图16.2期望收益c(b)为belief参数p_3的功能，假设机器人无论是在状态s_3或s_4。
有趣的是绘制函数c(b)在置信度分布在两种状态s_3和s_4在我们的例子中，只有国家与非零回报。在状态s_3回报
是100，而在状态s_4的回报是-100。图16.2a示出了函数c(b)为相信通过？0,0，第3页，1-p_3限定的子空间？这是一种belief的空间，放置在美国s_3和s_4所有的可能性。这里的期望c(b)的绘制为
函数的概率p_3的。显然，如果p_3 =0时，环境状态是s_4，并回报将是
c(s_4)= -100。另一方面，如果p_3 =1，环境的状态是s_3和回报将是c(s_3)= 100。在此期间，期望是线性的，从而导致在图16.2a所示的曲线图。
这种考虑使我们能够计算价值函数规划时域T = 1。从现在开始，我们将只考虑belief空间的地方的子集
在两种状态s_1和s_2所有的可能性。这种belief空间是由一个单一的参数参数化，p_1的，因为p_2 = 1 - p_1和p_3 = p_4 = 0的值函数C^1(b，a_1)中是恒定的零动作a_1：
C^1(b，a_1)= 0(16.9)
因为无论机器人的真实状态，动作a_1不会导致它的状态，使得它收到非零的回报。该值函数C^1(b，a_1)如果绘制如图16.2b。图片变得更有趣动作a_2。如果环境的状态是s_1，这个动作将导致90％的几率状态s_3，其中机器人将收到的100的收益有10％的概率会结束在状态s_4，在那里它会回报是-100。因此，在状态s_1的预期收益为0.9·100 + 0.1·(-100)= 80。类似的说法，状态s_2的预期收益为-80。在这两者之间，期望是线性的，产生的价值函数
C^1(b，a_2)=γ(80p_1 -80p_2)= 72p_1-72p_2 (16.10)
这里我们使用的折现因子γ= 0.9。这个函数表示在图16.2c，该类型的belief
<p_1，1-p_1，0，0>
那么，什么是正确的动作选择策略？继最大化预计这将对收益的理由，最好的动作取决于我们目前的belief，假设它准确
反映了我们对现实世界的知识。如果概率p_1≥0.5，最佳动作将a_2，因为我们期望正回报。对于值小于0.5，最佳动作将a_1，因为它避免了与动作a_2相关的负面预期收益。对应的价值功能的动作特定值功能最大：
C^1(b) = max_a(C^1(b,a))=max{0;72p_1-72p_2}
(16.11)
该值函数和动作选择了相应的策略由图16.2d，从而最大程度地说明了两个线性成分的固体图所示
由虚线。我们注意到，这个数值函数不是线性的任何更长的时间。相反，它是分段线性和凸出的。非线性产生的事实，不同的操作是最佳的belief空间的不同部分。
从图16.2d的价值功能，我们可以得出结论，belief p_1 <0.5是没有办法获得的收益大于0？当然，答案是否定的。该
值函数C^1(b)是仅最适合于时域T = 1。对于较大的视野，也能够先执动作作a_1，接着动作a_2。执动作作a_1具有两个有益效果：首先，它有助于我们估计当前状态更好，由于这样的事实，在我们可以感知，并且第二，以高概率从s_1至s_2的，或反之亦然改变状态。因此，一个良好的策略可能会执行的动​​作a_1，直到我们有理由相信，机器人的状态是s_1。然后，机器人应执行的动作a_2。
为了使这个比较正规的，让我们得出的最优值函数的时域T = 2，假设我们执行的动作a_1。然后，两件事情可能发生：我们要么遵守o_1或o_2。让我们先假设我们观察到o_1。那么新的belief状态可以使用贝叶斯滤波器来计算：
p_1' =η_1P(o_1'|s_1')\sum_(i=1)^2P(s_1'|a_1,s_i)p_i
=η_1*0.7(0.1p_1 + 0.8p_2)
=η_1*(0.07p_1 + 0.56p_2)
(16.12)
其中，η_1是贝叶斯法则的正规化。同样，我们得到的是s_2后概率：
p_2' = η_1Pp(o_1'|s_2')\sum_(i=1)^2P(s_2'|a_1,s_i)p_i

= η_1 0.4(0.9p_1 +0.2p_2) 
= η_1 (0.36p_1 +0.08p_2)
(16.13) since we know that p_1'+p_2'=1—after all, when executing action a_1 the state will
either be s_1 or s_2—we obtain for η_1: 
η_1 =1/(0.07p_1 +0.56p_2 +0.36p_1 +0.08p_2) = 1/(0.43p_1 +0.64p_2) (16.14)
我们也注意到，变量η_1是一个有用的概率：这是执行的动作a_1(无论后状态的)后观察o_1的概率。
我们现在有表情刻画因为我们执行ac-后belief
a_1化观察o_1。那么，什么是这个国家的belief价值？答案是转播tained通过插入新的belief到价值函数C^1(b)的公式定义(16.11)，和γ贴现的结果：

C^2(b，a_1，o_1)=γmax{0; 72p'_1-72p'_2}
= 0.9max{0; 72η_1(0.36p_1 + 0.08p_2)-72η_1(0.43p_1 + 0.64p_2)}
 = 0.9max{0; 72η_1(0.36p_1 + 0.08p_2 -0.43p_1 -0.64p_2)} 
 = 0.9max{0; 72η_1(-0.07p_1 -0.56p_2)} 
 = 0.9max{0; η_1(-5.04p_1 -40.32p_2)}

(16.15)
我们现在移动的因素η_1出来的最大化和移动0.9里面，并取得：C^2(b，a_1，o_1)=η_1max{0; -4.563p_1 -36.288p_2}
(16.16)，其是一个分段线性的，凸的函数的beliefb的参数。
推导的执行动作a_1后观察o_2是完全类似。特别是，我们得到的后验
p'_1 = η_2 0.3(0.1p_1 +0.8p_2) = η_2(0.03p_1 +0.24p_2)
p'_2 = η_2 0.6(0.9p_1 +0.2p_2) = η_2(0.54p_1 +0.12p_2)
with the normalizer 
η_2=1/(0.57p_1 +0.36p_2)
the corresponding value is 
C^2(b, a_1, o_1) = γ max{0 ; 72p'_1 −72p'_2} 
= η_2max{0 ; −33.048p_1 +7.776p_2} 
顺便说一句，我们也注意到，η_1^-1+η_2^-1 = 1。这直接遵循这样的事实
在贝叶斯正规化过滤是观察概率
ηi=1/(p(o_i'|a_1，b))(16.20)
和事实恰好有两种可能的观测我们的例子中，o_1和o_2。
现在让我们计算值C^2(b，a_1)中，这是在执动作作a_1的预期值。显然，该值是值C^2(b，a_1，01)和C^2(b，a_1，o_2)，通过实际观察o_1和o_2分别的概率加权的混合物。放入数学符号，我们有
C^2(b，a_1)= \sum_(i=1)^2(C^2(b，a_1，o_i)p(o_i | a_1，b))
(16.21)
术语c 2(b，a_1，o_i)已经如上所定义。概率p(o_i | a_1，b)执动作作a_1之后观察o_i是η_i^-1。因此，我们有所有成分计算所需值C^2(b，a_1)中：
C^2(b，a_1)=η_1^-1η_1max{0; -4.563p_1 -36.288p_2} +η_2^-1η_2max{0; -33.048p_1 + 7.776p_2}(16.22)
= max {0; -4.563p_1 -36.288p_2} +max{0; -33.048p_1 + 7.776p_2}
该表达式可以被重新表示为四个线性函数的最大值：
C^2(b，a_1)=max{0; -4.563p_1-36.288p_2;-33.048p_1+7.776p_2; -37.611p_1-28.512p_2}
图16.2e表示这四个线性函数的belief间隔<p_1，1 - p 2，0，0>。该值函数C^2(b，a_1)是这四个线性函数的最大值。由于是容易被看到的那样，二者的这些功能是足以定义最大;其他2顷在整个频谱较小。这使我们能够改写的C^2(b，a_1)为最大值的仅有的两个方面，而不是四个：
C^2(b，a_1)=max{0; -33.048p_1+7.776p_2}
(16.24)
最后，我们要确定的值C^2(b)中，这是下面两个条件中的最大值：
C^2(b)=max{C^2(b，a_1)，C^2(b，a_2)}(16.25)
正如很容易地验证，则第二项的最大化，C^2(b，a_2)中，是完全与上述相同的用于规划时域t = 1：
C^2(b，a_2)= C^1(b，a_2)= 72p_1 -72p_2
因此，我们获得(16.24)和(16.26)：
(16.26)
C^2(b)=max{0; -33.048p_1 + 7.776p_2; 72p_1 -72p_2}
(16.27)这个函数是最优值函数规划时域T,C^2(b)和其组成部分的belief子空间<p_1，1 - p_2，0，0>。正如很容易看到的，函数是分段线性和凸出的。特别是，它包括三个
线性件。对于在最左边的两个片belief(​​即p_1 <0.5)，a_1是最佳的动作。对于p_1 = 0.5，这两个动作都是一样的好。对应于最右边的线性片的belief，即用p_1> 0.5的belief，有最佳的动作a_2。如果a_1为最优函数，下一个动作取决于在belief空间的初始点和在观察。
价值函数c 2(b)是仅最适合于时域2。但是，我们的分析示出了几个重要的观点。
首先，最优值函数的任何有限的视距是连续的，分段线性，凸。每个线性一块对应于一个不同的操作选择在将来某个时候，或者，可以进行不同的观察。价值函数的凸性表示相当直观的观察，即明知是al-方面都优于不知道。给定两个belief状态b和b',的belief状态的混合值大于或等于该混合belief状态的值，对于某些混合参数β0≤β≤1：
βC(b)+(1-β)C(b')≥C(βb+(1-β)b')(16.28)
二，直线条的数量可以极大地增长，特别是如果一个人不注重线性函数变得过时。在我们的玩具例子中，两个出的四个直线约束限定的C^2(b，a_1)的是没有必要。 有效实施POMDPs的“诀窍”在于早识别过时线性函数如可能，从而使计算的价值函数时，没有计算被浪费。不幸的是，即使我们仔细排除一切不必要的线性约束，线性函数的数量仍然可以增长得非常迅速。这对对有限POMDPs的精确值迭代解决方案固有的扩展限制。

## belief空间中的价值迭代
在上一节展示来如何计算有限的价值函数。现在让我们回到在belief空间上价值迭代的一般问题。特别是，在介绍这一章中，我们指出了价值函数，我们简要地重申这里的基本更新方程：
C^T(b) = max_a\int[c(b')+C^(T-1)(b')]P(b'|a,b)db'
(16.29)
在这个和下面的章节中，我们将开发一个可在数字计算机上实现的通用的在belief空间计算价值迭代的算法。首先，我们注意到，公式(16.2)提出对所有的belief进行积分，其中每一个belief是一个概率分布。如果状态空间是有限的，并且状态数为n，所有的概率分布的空间是具有维数n-1的连续体。我们注意到，为了指定在n个离散事件的概率分布n-1个数值是必需的(第n参数可以省略，因为概率加起来为1)。如果状态空间是连续的，belief空间具有无限多的维度。因此，对所有的belief的积分似乎是计算艰巨的任务。然而，我们可以通过重新制定的问题，并对所有观测进行积分来代替。
让我们看看条件概率P(b'|a，b)，其中规定了在分配后的belief b'给定一个belief b和动作a。如果只有b和a是已知的，该后验belief b'不是唯一的，而且P(b'|a，b)是belief的一个真正的概率分布。但是，如果如果我们也知道测量o'，执行动作时，后验b'是独特的，P(b'|a，b)是一个point-mass分布的退化。从动作执行之前的belief b，动作a，和随后的观测o'，贝叶斯滤波器计算一个单一的准确的后验概率belief b'。因此，我们得出结论，只要我们知道o'，对所有的belief的积分会退化。
这种洞察力可以通过重新表达p利用
P(b'|a,b)=\int[P(b'|a,b,o')P(o'|a,b)do'
(16.30)

其中，p(b'|a，b，o')是由贝叶斯滤波器计算的point-mass 分布将积分代入价值迭代的定义(16.2)，我们得到
C^T(b)=max_a\int\int([c(b')+C^(T-1)(b')]P(b'|a,b,o')db'P(o'|a,b)do')
(16.31)
内积分
\int([c(b')+C^(T-1)(b')]P(b'|a,b,o')db'
(16.32)
仅包含一个非零项。这其中b'是由b，a和o的分布通过贝叶斯滤波器计算得到。让我们用b(b，a，o')来表示这个分布，那么有
B(b,a,o')(s')=P(s'|o',a,b)
=P(o'|s',a,b)P(s'|a,b)/P(o'|a,b)
=1/(P(o'|a,b))P(o'|s')\intP(s'|a,b,s)P(s|a,b)ds
=1/(P(o'|a,b))P(o'|s')\intP(s'|a,s)b(s)ds
(16.33)
我们注意到，正规化分母，P(o'|a，b)，是值更新方程(16.31)的一个因素。因此，将b(b，a，o 2)代入(16.31)消除了这一量，从而导致了值迭代算法的递归描述：
C^T(b) = max_a\int([c(B(b,a,o'))+C^(T-1)(B(b,a,o'))]P(o'|a,b)do')
(16.34)
这种形式是比在(16.2)更加方便，因为它只需要对所有可能的测量o'，而不是所有可能的belief分布b'进行积分，这种转变是派生此一章所有值迭代算法的一个重要观点。事实上，它是含蓄地用在上面的例子中，在一个新的价值函数是由有限多个分段线性函数混合获得的。
下面，很容易根据积分获得最大化价值的动作。因此，我们会注意到(16.34)可以改写为下列两个等式：
C^T(b,a)=\int([c(B(b,a,o'))+C^(T-1)(B(b,a,o'))]P(o'|a,b)do')
C^T(b)=max_aC^T(b,a)
(16.35)
(16.36)
在这里，ct(b，a)是时域t对于假设下一个动作a的belief b的函数。

## 计算价值函数
在我们的例子中，最优值函数是分段线性和凸的。这种情况，对于一般的有限情况均满足。对于所有具有有限时域的有限POMDPs的最优值函数都是分段线性和凸的。分段线性度意味着价值函数C^T由线性函数的集合表示。如果C^T是线性的，它可以通过一组系数C^T_1,...,C^T_n来表示
C^T(b)=C^T(p_1,...,p_n)=\sum_(i=1)^n(C^T_i p_i)
(16.37)
其中，像往常一样，p_1,...,p_n是一种belief分布的参数。在我们的示例中，分段线性和凸值函数C^T(b可以通过K个线性函数集合的最大值表示
C^T(b)=max_k\sum_(i=1)^n(C^T_(k,i) p_i)
(16.38)
其中，C^T_(k,1),...,C^T_(k,n)分别表示第k个线性函数的参数，以及k表示线性片段的数量。一组有限的线性函数的最大值事实上是凸的分段线性的函数。

在值迭代，初始值函数由下式给出
C^0 = 0(16.39)
我们注意到，这个数值函数是线性的，因此，它也是分段线性和凸。这种分配建立了递归值迭代算法的基础。
我们现在衍生除一个计算值函数C^T(b)的递归方程。该公式假定上一步的值函数C^(T-1)(b)，由一个分段线性函数如上规定表示。作为派生的一部分，我们将假设C^(T-1)(b)是分段线性和凸的，C^T(b)是也分段线性和凸出的。下面将证明具有有限时域的值函数是分段线性和凸的。
方程(16.35)和(16.36)定义如下：
C^T(b,a)=\int([c(B(b,a,o'))+C^(T-1)(B(b,a,o'))]P(o'|a,b)do')
C^T(b)=max_aC^T(b,a)
(16.40)
(16.41)
在有限的空间中，所有的积分可以通过有限和取代，我们得到：
C^T(b,a)=\sigma\sum_o'([c(B(b,a,o'))+C^(T-1)(B(b,a,o'))]P(o'|a,b))
C^T(b)=max_aC^T(b,a)
(16.43)
belief b(b，a，o')使用下面的表达式获得，该式为用和来替换(16.33)中的积分所得到：

B(b，a，o')(s')= 1/P(o'|a，b)P(o'|s')\sum_sP(s'|a，s)b(s) (16.44)

如果belief b由参数{p_1,...,p_n}表示，那么belief b’中的第i个参数由下式计算得到
p_i'=1/P(o'|a,b)P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j
(16.45)

为了计算价值函数C^T(b，a)，我们将现在的条件c(B(b，a，''))和C^(T-1)(B(b，a，o') 中衍生出更多实用的表达式中)，从公式(16.42)开始，具有参数B(b，a，o')={p_1',...,p_n'}，我们从c(B(b,a,o'))得到了
c(B(b,a,o'))=c(p_1',...,p_n')=\sum_(i=1)^n(c_ip_i')
(16.46)
代入(16.45)，我们得到
c(B(b,a,o'))=\sum_(i=1)^n(c_i*1/P(o'|a,b)P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)
=1/P(o'|a,b)\sum_(i=1)^n(c_i*P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)
(16.47)
由于P(o'|a，b)不依赖于i，后者变换是合法的。这种形式仍然包含一个难以计算的表达式：p(o'| a，b)。然而，在有限的情况下这个表达式可以被消掉。因此，它不必被任何进一步考虑。
在(16.42)中对量C^(T-1)(B(b，a，o'))的推导类似于上面c(b(b，a，o'))。特别是，我们不得不用唯一的分段线性和凸的值函数C^(T-1)取代直接回报函数c。然后可以得到
C^(T-1)(B(b，a，o'))=C^(T-1)(p_1',...,p_n')=max_k(\sum_(i=1)^n(C_(k,i)^(T-1)p_i'))
(16.48)
。如上所述，我们代入后验概率belief b(见(16.45))，并获得：
=max_k[\sum_(i=1)^n(C_(k,i)^(T-1)(1/(P(o'|a,b)))P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)]
(16.49)
其中P(o'| a，b)^-1不依赖于i或k，故可移出求和和最大化部分，得到：
=1/(P(o'|a,b))max_k[\sum_(i=1)^n(C_(k,i)^(T-1)P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)]
(16.50)
该表达式也是分段线性和凸的可能并不明显。然而，对该式进行整理得到下式：
=1/(P(o'|a,b))max_k[\sum_(j=1)^n(\sum_(i=1)^np_j(C_(k,i)^(T-1)P(o'|s_i')P(s_i'|a,s_j)))]
(16.51)

在这种形式下，很容易验证，对于任何的固定值k，使其最大化的参数是确实线性的参数pj。因而，这些线性段的最大值为分段线性和凸的。此外，线性段的数量是有限的。
现在让我们回到本节中的主要问题，即计算C^T(b，a)和时域T的值函数。我们简要地重申方程(16.42)：
C^T(b,a)=\sigma\sum_o'([c(B(b,a,o'))+C^(T-1)(B(b,a,o'))]P(o'|a,b))
16.52)

让我们首先用公式(16.47)和(16.50)计算总和c(B(b，a，o)？)+ C^(T-1)(B(b，a，o'))：
c(B(b，a，o)？)+ C^(T-1)(B(b，a，o'))=1/P(o'|a,b)\sum_(i=1)^n(c_i*P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j) + 1/(P(o'|a,b))max_k[\sum_(i=1)^n(C_(k,i)^(T-1)P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)]
(16.53) 
经过一些整理得到，
c(B(b，a，o)？)+ C^(T-1)(B(b，a，o'))=1/(P(o'|a,b))max_k[\sum_(i=1)^n((c_i + C_(k,i)^(T-1))P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)]
(16.54)

将这个表达式代入公式16.52
C^T(b,a)=\sigma\sum_o'(1/(P(o'|a,b))max_k[\sum_(i=1)^n((c_i + C_(k,i)^(T-1))P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)])(P(o'|a,b)
(16.55)
我们注意到，项P(o'|a,b同时出现在在此表达式的分子和分母中从而抵消了，得到：
C^T(b,a)=\sigma\sum_o'(max_k[\sum_(i=1)^n((c_i + C_(k,i)^(T-1))P(o'|s_i')\sum_(j=1)^nP(s_i'|a,s_j)p_j)])
(16.56)

这个消除是仅对有限POMDP满足的。所需的价值函数通过对于所有动作a最大化
C^T(b,a)得到
C^T(b)=max_aC^T(b,a)
(16.57)
很容易验证，在belief参数为p_1，。 。 。 ，pn的情况ct(b)是确实分段线性和凸的。具体地，对于每个固定k(16.56)的大括​​号内的量是线性的。这些k个线性函数的最大值是一个分段线性函数，包括最多有k段。分段线性的凸函数的总和为再次分段线性和凸的。因此，因此对于所有观测ø？的乘积的总和再次产生一个分段线性凸函数。最后，对于在方程(16.57)中的所有动作的最大值也是分段线性的凸函数。因此，我们的结论是在任何有限时域t，ct(b)是分段线性和凸出的。