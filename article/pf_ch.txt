4.2粒子滤波器
4.2.1基本算法
粒子滤波器是贝叶斯滤波器的一种可替代的非参数实现。就像histogram滤波器，粒子滤波器通过有限数量的参数逼近后验概率。但是，它们产生这些参数的方式以及状态空间的转移是不同的。粒子滤波器的核心思想是由一组根据这个后验概率得到的状态的随机样本来表示后验概率bel(xt)。粒子滤波用一组从这个分布得到的采样来表示这个分布，而不是由参数形式表示分布（例如表示一个正态分布概率密度的指数函数）。这样的表示是近似的，但它是非参数，因此它可以表示更广阔的分布比空间。

在粒子滤波器中，一个后验分布的采样称为粒子，由下式表示

X_t := x_t^([1]),x_t^([2]),...,x_t^([M])
每个粒子x_t^([m])(1≤m≤M)是在时间t状态的的具体实例，也就是，对于在真实世界时间t状态可以是在什么的一个假设。 在这里M表示

书78PR 90pdf页数
表4.3 粒子滤波算法，基于重要性采样的贝叶斯滤波器的变体。

粒子数。在实践中，粒子的数量M通常是一个大数，例如，M = 1000。在一些实现中，M是一个t或者其他和belief bel(x_t)有关量的函数。
粒子滤波器的重点是根据粒子集合X_t近似belief state bel(x_t)。理想的情况下，状态假设包括在粒子集合中的可能性应该正比于它的贝叶斯滤波后验概率bel(x_t)：

x_t^([m])~p(x_t|z_(1:t),u_(1:t))

由上式可知，一个状态空间的一个子区域由采样填充的越密集，真实的状态就跟可能落入这个区域。正如我们将在下面讨论，对于标准粒子滤波算法该特性仅在M近似于∞时成立。对于有限M，粒子是从具有略微不同的分布中得到。在实践中，这种差异是可以忽略的，只要粒子的数量不能太小（例如，M≥100）。

粒子滤波算法递归构建belief bel(x_t)根据早一个时间步长的belief
bel(x_(t-1))。因为belief是由粒子集合表示，这意味着粒子滤波器构造的粒子从XT-1到XT递归。粒子滤波器算法的最基本的变体可以参考<(￣3￣)>
表！ 。该算法的输入是
粒子集合XT-1，最近的控制UT和最近的量测ZT。该算法首先构造一个临时粒子集合ˉx，它类似于（但不等同）的bel(x_t)。它如下系统地处理输入粒子集合X_(t-1)中的每个粒子X [M]
1. 第4行基于粒子×〔米]叔1和控制UT在时间t产生一个假想状态。。。。 t。所得采样由m作为索引，这表明它是由XT-1的第m个粒子产生的。该步骤包括从下一状态分布p（XT | UT，XT-1）的采样。对于任意分布P（XT | UT，XT-1），没有从状态转移概率采样的统一公式。然而，生产实践中的许多主要分布具有有效的采样算法。步骤4中这组由迭代M次产生的粒子是bel(x_t)的滤波器的表示。
2，第5行计算每个粒子X [M]的重要性因子，记作W [M]。重要性因子用于合并观测ZT进入粒子集合。因此，重要性因子是粒子×〔米得到观测ZT的的概率。即，瓦特[米]
T = P（ZT | X [M] T）。如果我们的把W [M] T考虑为一个粒子的权重，那么加权粒子集合表示（近似地）贝叶斯滤波器后验概率bel(x_t)。
3.第8行至11行。这些行实现了所谓的重采样或重要性重采样。该算法对于临时集合ˉXT中的M个粒子判断是否需要。保留每个粒子的概率是由它的重要性权重给出。重采样将一个具有M个粒子的集合转换为另一个具有相同的大小的粒子集。通过将重要性权重纳入重采样过程中，粒子的分布因此而变化：在重采样步骤之前，他们根据bel(x_t)分布，经过重采样后，它们近似根据后验概率bel(x_t) η= P（ZT | X [M]T）bel(x_t)。事实上，所得的样本集合通常具有许多重复的。更重要的是没有被包括在XT中的粒子：那些于具有较低重要性权重的粒子。

重采样步骤具有强制粒子返回后验概率bel(x_t)的重要作用。实际上，另一种（通常比较差）版本的粒子滤波器将永远不会重采样，而是将维持每个粒子的重要性权重，权重被初始化为1然后根据下式更新：
W [米]T = P（ZT | X [M] t）的W [M] T-1（4.24）

这样的粒子滤波算法仍接近后验概率，但它的许多粒子将在后验概率很低的区域结束。其结果是，它需要更多的粒子，需要的数量的多少取决于后验概率的大小。重采样步骤是优胜劣汰的达尔文想法的概率实现：重新调整它的粒子集合到高后验概率状态空间的区域。通过这样做，它把滤波器算法的计算资源分配到最重要的状态空间所在区域。

4.2.2 重要性采样
用于粒子滤波器的推导，应当证明是有用的，下面以更详细地步骤讨论重采样。图4.2显示了采样步骤下的intuition。图4.2A示出了一个被称为目标分布的概率分布的密度函数f。我们想实现的是从f计算采样。然而，从f直接采样可能是不可能的。相反，我们可以从相关密度生成粒子，在图4.2B标记g。对应于概率密度g的分布称为(proposal distribution)建议分布。概率密度g为必须满足函数f（x）> 0意味着g（x）的> 0，使得对于从任何f可能生成的状态，根据g进行采样时，都可以有一个非零的概率来生成一个粒子。然而，所得到的粒子集合，在图4.2B的底部示出，是根据g而不是f分布的。特别地，对于任何一个区间范围。。。。（或更一般地，任何Borel集合A）粒子的经验计数落入一个收敛于A下对g的积分：
（4.25）
为了消除f和g之间的不同，粒子x^([m])是由商加权

（4.26）
p81 tu%%%%%%%%%

这由图4.2C表示：该图中的竖线表示重要性权重的大小。重要性权重是每个粒子的非归一化概率质量。特别地，我们有
4.27）
其中第一项作为用于所有重要性权重的正规化因子。换言之，尽管我们由密度g生成粒子，适当加权的粒子收敛于密度F。
具体的趋近设计对于集合A的一个积分。显然，一个粒子集合表示一个离散分布，而在我们的例子中f是连续的。由于这个原因，就没有可能与粒子集合相关联的密度。 因此，收敛是f的累积分布函数，而不是密度本身。重要抽样的一个很好的特性是如果在f（x）> 0时都有g（x）> 0它趋近于真密度。在大多数情况下，收敛律为O(1/sqrt(M))，其中M是采样的数目。恒定系数取决于f(s)和g(s)的相似度。
在粒子滤波器中，密度f对应于目标belief bel(x_t)。在此假设下，X_(t-1)中的粒子根据bel(x_t-1)分布，密度g对应于乘积分布：
P（XT | UT，XT-1）bel(x_t-1)  （4.28）
这个分布称为建议分布。 

4.2.3 PF的数学推导
为了获得粒子滤波器的数学表示，我们可以把粒子当作状态序列的采样
(4.29）
相应地修改该算法也很容易：只需追加粒子。。。到状态采样序列。。。。这种粒子滤波器计算在所有的状态序列上的后验概率：
bel（X0：T）= P（X0：T | U1：T，Z1：T）（4.30）
而不是belief bel(x_t)= P（XT | U1：T，Z1：T）。诚然，在所有状态序列上的空间是巨大的，并且用粒子覆盖它通常是显然不可行。然而，这不应阻止我们在这里，因为这个定义只是推导粒子滤波算法的手段。
根据文献xxx我们有，如下公式
（4.31）

验证初始条件是不重要的的，假设根据先验概率P（X0）采样获得我们的第一个粒子集。让我们假定粒子集在时刻t-1，根据bel（X0：T-1）分布。对于这个集合中的第m个粒子X [米]
0：T-1，在我们的算法的步骤4中产生的样本x [M] T是从建议分布产生的：
ρ（XT | XT-1，UT）bel（X0：T-1）=ρ（XT | XT-1，UT）P（X0：叔1 | Z0：T-1，U0：T-1）4.32）
（4.33）
常量η没有任何作用，因为重采样发生概率与正比于重要性权重。通过重采样概率正比于重要性权重的粒子，所得的粒子根据proposal与重要性权重的乘积分布
（4.34）
（请注意，常数系数η这里不同于（4.33）中的因子。）在表4.2的算法转换为从一个简单地观测得到，如果x [米]0：t为根据bel（X0：吨）分布，则状态采样x [米]t根据bel(x_t)分布。
正如我们下面讨论的，由于我们考虑到规一化常数，这个推导仅对于M→∞正确。然而，即使是有限的M，它也是有效的。

4.2.4粒子滤波器的性能
粒子滤波器是近似的，因此受到逼近误差。有近似误差四个免费源，其中每一个产生该粒子滤波器的改进版本。
1.第一逼近误差涉及只有有限的粒子的使用的事实。这神器介绍于后估计值的系统性偏差。看，考虑M = 1粒子的极端情况。在这种情况下，在表4.3的环中3行至第7将只被执行一次，并ˉ
XT将包含
只有单个粒子，从运动模型采样。关键的观点是，在重采样步骤（表4.3行8?11）现在将确定性
接受这个样本，无论其重要性系数W [M]
。换句话说，经t
观测概率p（ZT | X [米]
T）起着更新的结果没有任何作用，
而且也不ZT。因此，如果M = 1，粒子滤波器从概率生成粒子
P（XT | U1：T）（4.35）
的，而不是所期望的后验概率P（XT |的u1：吨，Z1：t）的。它断然忽略所有观测。怎么能这样呢？
罪魁祸首就是正常化，隐含在重采样步骤。当按比例的重要性的权重（该算法的9行），瓦特[米]采样
T变为
自己的归IFM = 1：P（抓X [M]
在9号线）= W [M] T ...
T水[M] = 1 T（4.36）
在一般情况下，问题是，非归一化的值（重量）[米]是从ANM维空间绘制的，但归一化之后它们驻留在的维数的空间
sionM-1。这是因为归一化之后，将其第重量可以从他们-1减去那些从1幸运的是，对于较大的数值OFM回收其他的权重，维，或自由度的损耗的效果，变得越来越少明显。
2.错误的粒子滤波器的第二个来源涉及随机性介绍 - duced在重采样阶段。要理解这个错误，它会再次成为考虑极端情况下，它是一个机器人，其状态不有用
改变。有时候，我们知道一个事实，即XT = XT-1。一个很好的例子是，移动机器人定位，对于一个非移动机器人。让我们进一步假定机器人具有无传感器，因此它无法估计的状态，那
这是不知道的状态。最初，我们的粒子组X0将会从先前产生的;因此，粒子将在整个状态空间进行传播。重采样步骤（8号线的算法）的随机特性将定期无法得出一个状态样本x [M]。但是，由于我们的状态转移是确定的，没有新的国家将在向前采样步骤（4号线）出台。其结果是相当艰巨：以概率1，单一状态M相同的副本将生存;的多样性会消失由于反复重采样。到外部服务器转播，它可能会出现的机器人唯一确定的世态，一个明显的矛盾，以机器人具有无传感器的事实。
这个例子暗示与巨大实际后果粒子滤波器的重要限制。特别是，再采样处理诱导二多样性的在粒子种群，这实际上本身表现为近似误差的损失。这种误差被称为估计的方差：即使该粒子的方差设定本身的减小，粒子设定为真正的信念增加一个估计的方差。控制该方差，或错误时，粒子滤波器为任何实际实施是必不可少的。
存在方差减少的两大战略。第一，可以减少在该重新采样发生的频率。当该状态被称为是静态的
（XT = XT-1）一个人永远不能重新采样。是这种情况下，例如，在移动机器人定位：当机器人停止，重新采样应暂停（事实上，通常暂停观测的集成，以及一个好主意）。即使状态的变化，它往往是减少重采样的频率是个好主意。多次观测总是可通过倍增集成
1：2：3：
4：5：6：7：8：9：
10：11：
12：13：14：
算法低方差采样器（XT，WT）：
XT =?
ˉ
R =兰特（0，M-1）C = W [1]
T I = 1的形式= 1汤姆做
U = R +（M-1）·M-1，而U>?
I = I + 1 C = C + W [I] T ...
ENDWHILE加X [I]
吨至ˉXT ENDFOR回报ˉXT
表4.4低方差为重采样粒子滤波。此例程使用单一随机数到从粒子setX的关联weightsW样，但粒子进行重新采样的probabil-性仍正比于其重量。此外，采样是有效的：SamplingM粒子需要O（M）的时间。
如上所述更新的重要性因子。更具体地，它保持了重要性重量在存储器和更新它们如下：
W [M] T =？ 1，如果采样发生P（ZT | X [M] t）的W [M] T-1，如果没有重采样发生（4.37）
当重新采样的选择是复杂的，需要实践经验：重新采样过于频繁会增加多样性丧失的风险。如果有太多的样本很少，许多采样可能在低概率的区域被浪费。一个标准的方法来确定采样是否应进行是观测的重要性权重的变化。权重的方差涉及的采样的表示性的效率。如果所有的权重是相同的，那么方差为零，没有重新采样应该执行。如果，在另一方面，在权重集中于少数的样本，则重量方差是高和重新采样应该执行。
用于减少抽样误差的第二策略被称为低方差采样。表4.4示出了低方差采样的实现。其基本思路是，而不是选择样本彼此独立地在再采样处理（如对表4.3的基本粒子滤波器的情况下）即，该选择涉及一个顺序随机过程。
相反choosingM随机数，并选择那些任意一台spond这些随机数字粒子，这种算法计算一个随机数，选择样本，根据这个数字，但仍与该试样重量的概率成正比。这是由在区间[0绘制一个随机数r实现; M-1 [，whereM是在时间t要绘制的样本数。表4.4的算法然后通过反复加入固定amountM-1至r和通过选择对应于所得数目的粒子选择的粒子。任何数u在[0; 1]指向只有一个粒子，即粒子对我这
?
I = argmin
？
W [M]牛逼≥ü
?
m = 1时
（4.38）
表4.4 while循环有两个任务，它计算在这个方程的右手侧的总和，另外检查是否i是第一粒子，使得权重的相应总和超过u的索引。选择，然后进行在12行这个过程也示于图4.3。
低方差采样器的优点是三倍。首先，它涵盖的样本空间较独立的随机采样更系统的方式。这应该是显而易见的，通过所有的粒子因采样周期的系统，而不是自主选择他们随意的事实。第二，如果所有的采样都具有相同的重要性的因素，所得到的样张设定ˉ
XT相当于XT所以，如果我们重新采样，而不没有采样被丢失
具有集成观察到XT。第三，在低方差采样有
一个复杂性为O（M）。实现独立SAM-相同的复杂
耦难度大;明显的实现需要O（logM）搜索一旦随机数已绘制每个粒子，这会导致O（MlogM）的复杂性，整个采样处理。计算时间的本质利用粒子滤波器时，往往一个高效的执行重采样过程中可以使在实用性能上的巨大差异。由于这些原因，在机器人粒子滤波器大多数实现往往依靠mech- anisms像一个刚才讨论。
在一般情况下，在有效采样文献是巨大的。另一种流行的选择是分层抽样，其中粒子分为子集。在每个子集的样本数，可以保持而不管包含在每个子集中的粒子的总重量相同的随时间。这些技术往往表现良好时，机器人跟踪多个不同的假设与一个粒子滤波器。
错误3.第三个来源是关于该提案的分歧和目标显示tribution。我们已经暗示了上述问题，在讨论重要性采样时。从本质上说，从一个建议分布不考虑观测产生的粒子（参??见，等式（4.28））。当然，目标分配，这就是我们熟悉的贝叶斯滤波器后，依赖于观测。粒子滤波器的效率依赖于关键的建议和目标分布之间的“匹配”。如果，在一个极端，机器人的传感器是非常不准确的，但它的运动是非常准确的，目标分发将类似于建议分布和粒子滤波器将是有效的。如果，在另一方面，所述传感器是高度精确的，但运动不是，这些分布可以偏离基本上，将所得粒子滤波器可以变得任意地低效。这方面的一个极端的例子是有确定性的传感器的机器人。对于最确定的传感器，观测的支持
概率p（Z | X）将被限制到状态空间的一个子流形。为前充裕，可以考虑移动机器人与噪声的范围进行定位传感器。显然，P（Z | X）将是零，几乎每一个状态x，与匹配的范围内观测z中的完全相同的EX- ceptions。这样的情况
可能是致命的：建议分布几乎将永远不产生这正好对应于观测范围Z A样本x。因此，所有的重要性的权重将是零的概率是1，并再采样步骤变得虐待
空调。更一般地，如果p（Z | x）是简并的，这意味着它的支持被限制为比状态空间的维数较小尺寸的歧管，平粒子滤波算法是不适用的。
存在一集合的技术来g服这个问题。一个头脑简单的方法是简单地承担更多的噪音比感觉有气动执行
盟友。例如，一个人可能使用的观测模型P（Z | x），所overes- timates范围内观测的实际噪声。在许多实现中，这样的步骤改善了粒子滤波器，尽管使用的是故意不正确的观测概率的奇特的准确性。其他技术涉及建议分布在了结合观测的方法的修改。这种技术将在本书后面的章节中讨论。
粒子滤波器4的第四和最后的缺点是被称为粒子德穷困问题。当在高维空间中执行的估计，有可能在附近，以正确的状态没有粒子。这可能是BE-导致粒子的数量太小，覆盖所有相关区域具有高似然性。然而，人们可能会认为，这最终一定会发生在任何粒子滤波器，无论是粒子集合sizeM的。粒子发生剥夺随机采样的结果;一个不幸的随机数序列能够消灭临近的真实状态的所有粒子。在每个重复采样步骤，对于这种情况发生的概??率大于零（虽然它是通常呈指数小于M）。因此，我们只需要运行粒子滤波足够长的时间。最终，我们将产生一个估计是任意不正确。
在实践中，这种性质的问题只倾向于出现当M是相对于所有状态的具有高似然性的空间小。一种流行的解决这个问题出增加运动和的观测命令的实际序列的少量随机产生的粒子进入设置每个二次采样处理后，无论。这种方法可以减少（但不固定）的粒子剥夺的问题，但在一个不正确的后验估计的费用。添加随机样本的优势在于它的简单性：软件MOD-必要ification添加随机样本在粒子滤波器是最小的。作为一个经验法则，将随机样本应被视为最后的措施重新排序，如果所有其他技术来解决一个问题，剥夺失败应该只适用。

这个讨论表明，采样的表示性的质量与样本的数目增加而增加。一个重要的问题，因此多少样本应被用于一个特定的估计问题。不幸的是，没有完美的回答这个问题，它常常被留给用户，以确定采样的所需数量。作为一个经验法则，采样的数量强烈地依赖于状态空间的二 - mensionality和由粒子滤波器近似的分布的不确定性。例如，均匀分布需要更多的采样比分布集中在状态空间的一个小区域。对样本量更详细的讨论会在机器人定位的情况下给予，当我们考虑自适应粒子滤波器（见？）。
4.3摘要
本节介绍了一种非参数贝叶斯滤波器，粒子滤波器。非参数滤波器通过价值有限数量逼近后路。下对系统模型和后的形状温和的假设，都具有该逼近误差均匀地收敛到零作为用于表示后的值的数目趋于无穷的财产。
替代非参数技术被称为粒子滤波器。粒子滤波装置将状态的随机抽样，从后得出表示后验。这样的采样被称为粒子。粒子滤波器是非常容易实现的，而他们是最通用的表示了所有贝叶斯滤波算法。
具体的战略存在，以减少粒子滤波器的错误。其中最流行的是技术来减少该起因于算法的随机性的估计的方差，和技术用于适配按照后的复杂性粒子的数量。
在这句和前面的章节讨论的滤波算法奠定了基础贯穿本书的其余部分中讨论最概率机器人算法。这里介绍的材料，表示了当今许多最流行的算法和概率机器人表示。